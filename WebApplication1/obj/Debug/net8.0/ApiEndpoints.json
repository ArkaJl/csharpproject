[
  {
    "ContainingType": "BackendApi.Controllers.AlbumController",
    "Method": "GetAll",
    "RelativePath": "api/Album",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.AlbumController",
    "Method": "Create",
    "RelativePath": "api/Album",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "album",
        "Type": "Domain.Models.Album",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.AlbumController",
    "Method": "GetById",
    "RelativePath": "api/Album/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.AlbumController",
    "Method": "Update",
    "RelativePath": "api/Album/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "album",
        "Type": "Domain.Models.Album",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.AlbumController",
    "Method": "Delete",
    "RelativePath": "api/Album/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.AlbumController",
    "Method": "GetByCommunityId",
    "RelativePath": "api/Album/community/{communityId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "communityId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "GetAll",
    "RelativePath": "api/Chat",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "Create",
    "RelativePath": "api/Chat",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chat",
        "Type": "Domain.Models.Chat",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "GetChatParticipants",
    "RelativePath": "api/Chat/{chatId}/participants",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chatId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "AddParticipant",
    "RelativePath": "api/Chat/{chatId}/participants/{userId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chatId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "RemoveParticipant",
    "RelativePath": "api/Chat/{chatId}/participants/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chatId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "GetById",
    "RelativePath": "api/Chat/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "Update",
    "RelativePath": "api/Chat/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "chat",
        "Type": "Domain.Models.Chat",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "Delete",
    "RelativePath": "api/Chat/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "GetByCommunityId",
    "RelativePath": "api/Chat/community/{communityId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "communityId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.ChatController",
    "Method": "GetByUserId",
    "RelativePath": "api/Chat/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "GetAll",
    "RelativePath": "api/Community",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "Create",
    "RelativePath": "api/Community",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "community",
        "Type": "Domain.Models.Community",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "UpdateMemberRole",
    "RelativePath": "api/Community/{communityId}/members/{userId}/role",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "communityId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "SubscribeUser",
    "RelativePath": "api/Community/{communityId}/subscribe/{userId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "communityId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "GetCommunitySubscribers",
    "RelativePath": "api/Community/{communityId}/subscribers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "communityId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "UnsubscribeUser",
    "RelativePath": "api/Community/{communityId}/unsubscribe/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "communityId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "GetById",
    "RelativePath": "api/Community/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "Update",
    "RelativePath": "api/Community/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "community",
        "Type": "Domain.Models.Community",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "Delete",
    "RelativePath": "api/Community/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "GetByUserId",
    "RelativePath": "api/Community/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.CommunityController",
    "Method": "GetUserSubscriptions",
    "RelativePath": "api/Community/user/{userId}/subscriptions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "GetAll",
    "RelativePath": "api/Media",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "Create",
    "RelativePath": "api/Media",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "medium",
        "Type": "Domain.Models.Medium",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "GetById",
    "RelativePath": "api/Media/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "Update",
    "RelativePath": "api/Media/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "medium",
        "Type": "Domain.Models.Medium",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "Delete",
    "RelativePath": "api/Media/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "GetByAlbumId",
    "RelativePath": "api/Media/album/{albumId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "albumId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "GetRecentMedia",
    "RelativePath": "api/Media/recent/{count}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "count",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "GetByType",
    "RelativePath": "api/Media/type/{type}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MediaController",
    "Method": "GetByUserId",
    "RelativePath": "api/Media/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "GetAll",
    "RelativePath": "api/Message",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "Create",
    "RelativePath": "api/Message",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "message",
        "Type": "Domain.Models.Message",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "GetById",
    "RelativePath": "api/Message/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "Update",
    "RelativePath": "api/Message/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "message",
        "Type": "Domain.Models.Message",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "Delete",
    "RelativePath": "api/Message/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "MarkAsRead",
    "RelativePath": "api/Message/{id}/read",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "GetByChatId",
    "RelativePath": "api/Message/chat/{chatId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chatId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "MarkAllAsRead",
    "RelativePath": "api/Message/chat/{chatId}/user/{userId}/read-all",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chatId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "GetUnreadCount",
    "RelativePath": "api/Message/chat/{chatId}/user/{userId}/unread/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chatId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.MessageController",
    "Method": "GetByUserId",
    "RelativePath": "api/Message/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "GetAll",
    "RelativePath": "api/Notification",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "Create",
    "RelativePath": "api/Notification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notification",
        "Type": "Domain.Models.Notification",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "GetById",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "Update",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "notification",
        "Type": "Domain.Models.Notification",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "Delete",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "MarkAsRead",
    "RelativePath": "api/Notification/{id}/read",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "GetByUserId",
    "RelativePath": "api/Notification/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "MarkAllAsRead",
    "RelativePath": "api/Notification/user/{userId}/read-all",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "GetUnreadByUserId",
    "RelativePath": "api/Notification/user/{userId}/unread",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.NotificationController",
    "Method": "GetUnreadCount",
    "RelativePath": "api/Notification/user/{userId}/unread/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "GetAll",
    "RelativePath": "api/Post",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "Create",
    "RelativePath": "api/Post",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "post",
        "Type": "Domain.Models.Post",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "GetById",
    "RelativePath": "api/Post/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "Update",
    "RelativePath": "api/Post/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "post",
        "Type": "Domain.Models.Post",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "Delete",
    "RelativePath": "api/Post/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "AddComment",
    "RelativePath": "api/Post/{postId}/comments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "comment",
        "Type": "Domain.Models.Comment",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "GetPostComments",
    "RelativePath": "api/Post/{postId}/comments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "LikePost",
    "RelativePath": "api/Post/{postId}/like/{userId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "UnlikePost",
    "RelativePath": "api/Post/{postId}/unlike/{userId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "GetByCommunityId",
    "RelativePath": "api/Post/community/{communityId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "communityId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.PostController",
    "Method": "GetByUserId",
    "RelativePath": "api/Post/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "GetAll",
    "RelativePath": "api/StoreItem",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "Create",
    "RelativePath": "api/StoreItem",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "storeItem",
        "Type": "Domain.Models.StoreItem",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "GetById",
    "RelativePath": "api/StoreItem/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "Update",
    "RelativePath": "api/StoreItem/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "storeItem",
        "Type": "Domain.Models.StoreItem",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "Delete",
    "RelativePath": "api/StoreItem/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "GetByCategory",
    "RelativePath": "api/StoreItem/category/{category}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "category",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "GetByPriceRange",
    "RelativePath": "api/StoreItem/price-range",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "minPrice",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "maxPrice",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "Search",
    "RelativePath": "api/StoreItem/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "term",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.StoreItemController",
    "Method": "GetByType",
    "RelativePath": "api/StoreItem/type/{type}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "GetAll",
    "RelativePath": "api/Transaction",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "Create",
    "RelativePath": "api/Transaction",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transaction",
        "Type": "Domain.Models.Transaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "GetById",
    "RelativePath": "api/Transaction/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "Update",
    "RelativePath": "api/Transaction/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "transaction",
        "Type": "Domain.Models.Transaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "Delete",
    "RelativePath": "api/Transaction/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "GetByDateRange",
    "RelativePath": "api/Transaction/date-range",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "GetByItemId",
    "RelativePath": "api/Transaction/item/{itemId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "itemId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "GetByType",
    "RelativePath": "api/Transaction/type/{type}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "GetByUserId",
    "RelativePath": "api/Transaction/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.TransactionController",
    "Method": "GetUserBalance",
    "RelativePath": "api/Transaction/user/{userId}/balance",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "GetAll",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "Add",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Domain.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "Update",
    "RelativePath": "api/User",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Domain.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "Delete",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserController",
    "Method": "GetById",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserInventoryController",
    "Method": "GetAll",
    "RelativePath": "api/UserInventory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserInventoryController",
    "Method": "Add",
    "RelativePath": "api/UserInventory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userInventory",
        "Type": "Domain.Models.UserInventory",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserInventoryController",
    "Method": "Update",
    "RelativePath": "api/UserInventory",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userInventory",
        "Type": "Domain.Models.UserInventory",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserInventoryController",
    "Method": "GetByUserId",
    "RelativePath": "api/UserInventory/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserInventoryController",
    "Method": "GetByUserAndItemId",
    "RelativePath": "api/UserInventory/user/{userId}/item/{itemId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "itemId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserInventoryController",
    "Method": "Delete",
    "RelativePath": "api/UserInventory/user/{userId}/item/{itemId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "itemId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserInventoryController",
    "Method": "EquipItem",
    "RelativePath": "api/UserInventory/user/{userId}/item/{itemId}/equip",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "itemId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendApi.Controllers.UserInventoryController",
    "Method": "UnequipItem",
    "RelativePath": "api/UserInventory/user/{userId}/item/{itemId}/unequip",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "itemId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication1.Controllers.WeatherForecastController",
    "Method": "Add",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication1.Controllers.WeatherForecastController",
    "Method": "Update",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "index",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication1.Controllers.WeatherForecastController",
    "Method": "Delete",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "index",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication1.Controllers.WeatherForecastController",
    "Method": "GettAll",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sortStrategy",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApplication1.Controllers.WeatherForecastController",
    "Method": "GetItem",
    "RelativePath": "WeatherForecast/{index}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "index",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApplication1.Controllers.WeatherForecastController",
    "Method": "GetName",
    "RelativePath": "WeatherForecast/find-by-name /{name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApplication1</name>
    </assembly>
    <members>
        <member name="T:BackendApi.Controllers.AlbumController">
            <summary>
            Контроллер для управления альбомами
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.AlbumController.GetAll">
            <summary>
            получить все альбомы
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.AlbumController.GetById(System.String)">
            <summary>
            получить альбомы по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.AlbumController.GetByCommunityId(System.String)">
            <summary>
            получить альбомы сообщества по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.AlbumController.Create(Domain.Models.Album)">
            <summary>
            Создать альбом
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.AlbumController.Update(System.String,Domain.Models.Album)">
            <summary>
            изменить данные альбома
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.AlbumController.Delete(System.String)">
            <summary>
            удалить альбом
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.ChatController">
            <summary>
            Контроллер для управления чатами
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.GetAll">
            <summary>
            получить все чаты
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.GetById(System.String)">
            <summary>
            получить чат по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.GetByCommunityId(System.String)">
            <summary>
            получить чаты сообщества
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.GetByUserId(System.String)">
            <summary>
            получить чаты пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.Create(Domain.Models.Chat)">
            <summary>
            создать чат
            </summary>
            
        </member>
        <member name="M:BackendApi.Controllers.ChatController.Update(System.String,Domain.Models.Chat)">
            <summary>
            изменить чат
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.Delete(System.String)">
            <summary>
            удалить чат
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.AddParticipant(System.String,System.String)">
            <summary>
            добавить участника в чат
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.RemoveParticipant(System.String,System.String)">
            <summary>
            удалить участника чата
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.GetChatParticipants(System.String)">
            <summary>
            получить всех участников чата
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.CommunityController">
            <summary>
            Контроллер для управления сообществами
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.GetAll">
            <summary>
            получить все сообщества
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.GetById(System.String)">
            <summary>
            получить сообщество по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.GetByUserId(System.String)">
            <summary>
            получить участника сообщества по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.Create(Domain.Models.Community)">
            <summary>
            создать сообщество
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.Update(System.String,Domain.Models.Community)">
            <summary>
            изменить данные сообщества
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.Delete(System.String)">
            <summary>
            удалить сообщество
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.SubscribeUser(System.String,System.String,System.String)">
            <summary>
            добавить участника сообщества
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.UnsubscribeUser(System.String,System.String)">
            <summary>
            удалить участника сообщества
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.GetCommunitySubscribers(System.String)">
            <summary>
            получить всех участников сообщества
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.GetUserSubscriptions(System.String)">
            <summary>
            получить подписчиков пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.CommunityController.UpdateMemberRole(System.String,System.String,System.String)">
            <summary>
            изменить роль участника сообщества
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.MediaController">
            <summary>
            Контроллер для управления медиа
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.GetAll">
            <summary>
            получить все медиа
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.GetById(System.String)">
            <summary>
            получить медиа по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.GetByAlbumId(System.String)">
            <summary>
            получить медиа из альбома
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.GetByUserId(System.String)">
            <summary>
            получить медиа пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.GetByType(System.String)">
            <summary>
            получить медиа типа
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.GetRecentMedia(System.Int32)">
            <summary>
            получить последние несколько медиа
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.Create(Domain.Models.Medium)">
            <summary>
            создать медиа
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.Update(System.String,Domain.Models.Medium)">
            <summary>
            изменить медиа
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MediaController.Delete(System.String)">
            <summary>
            удалить медиа по id
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.MessageController">
            <summary>
            Контроллер для управления сообщениями
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.GetAll">
            <summary>
            получить все сообщения
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.GetById(System.String)">
            <summary>
            получить сообщение по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.GetByChatId(System.String)">
            <summary>
            получить сообщения из чата
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.GetByUserId(System.String)">
            <summary>
            получить сообщения пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.GetUnreadCount(System.String,System.String)">
            <summary>
            получить количество непрочитанных сообщений пользователя в чате
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.Create(Domain.Models.Message)">
            <summary>
            создать сообщение
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.Update(System.String,Domain.Models.Message)">
            <summary>
            изменить сообщение
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.Delete(System.String)">
            <summary>
            удалить сообщение
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.MarkAsRead(System.String)">
            <summary>
            пометить прочитанным сообщение
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.MessageController.MarkAllAsRead(System.String,System.String)">
            <summary>
            пометить все сообщения пользоватея прочитанными в чате
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.NotificationController">
            <summary>
            Контроллер для управления уведомлениями
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.GetAll">
            <summary>
            получить все уведомления
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.GetById(System.String)">
            <summary>
            получить уведомление по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.GetByUserId(System.String)">
            <summary>
            получить уведомления пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.GetUnreadByUserId(System.String)">
            <summary>
            получить непрочитанные уведомления пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.GetUnreadCount(System.String)">
            <summary>
            получить количество непрочитанных сообщений пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.Create(Domain.Models.Notification)">
            <summary>
            создать уведомление
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.Update(System.String,Domain.Models.Notification)">
            <summary>
            изменить уведомление
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.Delete(System.String)">
            <summary>
            удалить уведомление
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.MarkAsRead(System.String)">
            <summary>
            пометить уведомление прочитанным
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.NotificationController.MarkAllAsRead(System.String)">
            <summary>
            пометить все уведомления прочитанными пользователя
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.PostController">
            <summary>
            Контроллер для управления постами
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.GetAll">
            <summary>
            получить все посты
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.GetById(System.String)">
            <summary>
            получить пост по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.GetByUserId(System.String)">
            <summary>
            получить посты пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.GetByCommunityId(System.String)">
            <summary>
            получить посты в сообществе
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.Create(Domain.Models.Post)">
            <summary>
            создать пост
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.Update(System.String,Domain.Models.Post)">
            <summary>
            изменить пост
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.Delete(System.String)">
            <summary>
            удалить пост
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.LikePost(System.String,System.String)">
            <summary>
            пометить нравится пользователем пост
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.UnlikePost(System.String,System.String)">
            <summary>
            пометить ненравится пользователем пост
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.AddComment(System.String,Domain.Models.Comment)">
            <summary>
            добавить комментарий посту
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.PostController.GetPostComments(System.String)">
            <summary>
            получить комментарии поста
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.StoreItemController">
            <summary>
            контроллер для управления товарами
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.GetAll">
            <summary>
            получить все товары
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.GetById(System.String)">
            <summary>
            получить товар по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.GetByType(System.String)">
            <summary>
            получить все товары типа
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.GetByCategory(System.String)">
            <summary>
            получить товары категории
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.Search(System.String)">
            <summary>
            получить товары поиска
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.GetByPriceRange(System.Int32,System.Int32)">
            <summary>
            получить товары по цене
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.Create(Domain.Models.StoreItem)">
            <summary>
            создать товар
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.Update(System.String,Domain.Models.StoreItem)">
            <summary>
            изменить товар
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.StoreItemController.Delete(System.String)">
            <summary>
            удалить товар
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.TransactionController">
            <summary>
            контроллер для управления трнзакциями
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.GetAll">
            <summary>
            получить все транзакции
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.GetById(System.String)">
            <summary>
            получить транзакцию по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.GetByUserId(System.String)">
            <summary>
            получить транзакции пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.GetByItemId(System.String)">
            <summary>
            получить транзакции с предметом по id
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.GetByType(System.String)">
            <summary>
            получить транзакции типа
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.GetByDateRange(System.DateTime,System.DateTime)">
            <summary>
            получить транзакции по дате
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.GetUserBalance(System.String)">
            <summary>
            получить баланс пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.Create(Domain.Models.Transaction)">
            <summary>
            создать транзакцию
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.Update(System.String,Domain.Models.Transaction)">
            <summary>
            изменить транзакцию
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.TransactionController.Delete(System.String)">
            <summary>
            удалить транзакцию
            </summary>
        </member>
        <member name="T:BackendApi.Controllers.UserController">
            <summary>
            Контроллер для управления пользователями
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserController.GetAll">
            <summary>
            Получить всех пользователей
            </summary>
            <returns>Список всех пользователей</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Add(Domain.Models.User)">
             <summary>
             Создать нового пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /User
                 {
                     "username": "johndoe",
                     "email": "john@example.com",
                     "passwordHash": "hashed_password",
                     "avatarUrl": "https://example.com/avatar.jpg",
                     "coins": 100,
                     "status": "Online"
                 }
            
             </remarks>
             <param name="user">Данные пользователя</param>
             <returns>Созданный пользователь</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Update(Domain.Models.User)">
            <summary>
            Обновить данные пользователя
            </summary>
            <param name="id">ID пользователя</param>
            <param name="user">Обновленные данные</param>
            <returns>Обновленный пользователь</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Delete(System.String)">
            <summary>
            Удалить пользователя
            </summary>
            <param name="id">ID пользователя</param>
            <returns>Статус операции</returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.GetById(System.String)">
            <summary>
            Получить пользователя по ID
            </summary>
            <param name="id">ID пользователя</param>
            <returns>Данные пользователя</returns>
        </member>
        <member name="T:BackendApi.Controllers.UserInventoryController">
            <summary>
            контроллер для управления инвентарем пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.GetAll">
            <summary>
            получить все инвентари
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.GetByUserId(System.String)">
            <summary>
            получить инвыентарь пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.GetByUserAndItemId(System.String,System.String)">
            <summary>
            получить предмет пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.Add(Domain.Models.UserInventory)">
            <summary>
            добавить предмет в инвентарь пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.Update(Domain.Models.UserInventory)">
            <summary>
            изменить инвентарь
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.Delete(System.String,System.String)">
            <summary>
            удалить предмет из инвентаря пользователя
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.EquipItem(System.String,System.String)">
            <summary>
            экипировать предмет пользоватеоля
            </summary>
        </member>
        <member name="M:BackendApi.Controllers.UserInventoryController.UnequipItem(System.String,System.String)">
            <summary>
            снять предмет пользователя
            </summary>
        </member>
    </members>
</doc>
